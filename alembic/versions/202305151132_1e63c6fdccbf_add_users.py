"""add users

Revision ID: 1e63c6fdccbf
Revises: 47a99ff2e0a3
Create Date: 2023-05-15 11:32:20.275965+00:00

"""
import uuid
import bcrypt

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1e63c6fdccbf'
down_revision = '47a99ff2e0a3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('username', sa.String(length=256), nullable=False),
    sa.Column('password_encrypted', sa.String(length=1024), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    # ### end Alembic commands ###

    password = 'password'
    password_encoded = password.encode('utf-8')
    salt = bcrypt.gensalt()
    password_hash = bcrypt.hashpw(password_encoded, salt)
    password_encrypted = password_hash.decode('utf-8')

    id = str(uuid.uuid4())

    op.execute(
        f"insert into users (id, username, password_encrypted) values ('{id}', 'username', '{password_encrypted}')"
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    # ### end Alembic commands ###
